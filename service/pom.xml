<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>HibernateDemo</artifactId>
        <groupId>HibernateDemo</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>service</artifactId>

    <dependencies>
        <dependency>
            <groupId>HibernateDemo</groupId>
            <artifactId>hibernate</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
    </dependencies>

    <!-- build specific stuff -->
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <archive>
                        <!-- tell Maven where our main is -->
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>com.hibernatedemo.app.Main</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <!-- package all dependencies with JAR -->
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <id>make-my-jar-with-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>com.hibernatedemo.app.Main</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <overWriteReleases>true</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <resources>
            <!-- we have to tell Maven where to expect our properties file -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>

    <profiles>
        <!-- The configuration of the deployment profile -->
        <profile>
            <id>development</id>
            <!-- The development profile is active by default -->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- Specify dialect in out case we will be using MySQL so it is pretty self explanatory -->
                <config.hibernate.dialect>org.hibernate.dialect.MySQL5Dialect</config.hibernate.dialect>

                <!-- Developers bread and butter of any ORM including Hibernate. This option will print out all queries
                 generated by Hibernate in console which is a must during development process -->
                <config.hibernate.show_sql>FALSE</config.hibernate.show_sql>

                <!-- Make option above look pretty :) -->
                <config.hibernate.format_sql>FALSE</config.hibernate.format_sql>

                <!-- Piece of second level cache. Very can be very useful or dangerous depending on your system
                 It will cache objects on application level avoiding calls to database. Can create stale reads... -->
                <config.javax.persistence.sharedCache.mode>ALL</config.javax.persistence.sharedCache.mode>

                <!-- solves problem with getting entities after session is closed in a very brute force way, by opening a new session
                considered as anti-pattern can be used to hack through a tough deadline, but not recommended for prolonged use-->
                <config.hibernate.enable_lazy_load_no_trans>TRUE</config.hibernate.enable_lazy_load_no_trans>

                <!-- C3P0 connection lib -->
                <config.hibernate.connection.provider_class>org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider</config.hibernate.connection.provider_class>

                <!-- minimum connections in pool on startup -->
                <config.hibernate.c3p0.min_size>5</config.hibernate.c3p0.min_size>

                <!-- maximum available connections, balance this between your apps and db configs -->
                <config.hibernate.c3p0.max_size>50</config.hibernate.c3p0.max_size>

                <!-- When will connection be removed from pool, in seconds, must be higher than one below -->
                <config.hibernate.c3p0.timeout>50</config.hibernate.c3p0.timeout>

                <!-- When connection will be validated -->
                <config.hibernate.c3p0.idle_test_period>10</config.hibernate.c3p0.idle_test_period>

                <!-- Statement caching config, how many statements can be cached, can boost performance -->
                <config.hibernate.c3p0.max_statements>100</config.hibernate.c3p0.max_statements>

                <!-- If connection attempt fails, how many times should C3P0 try again ? until all attempts are done,
                no Exception is thrown-->
                <config.hibernate.c3p0.acquireRetryAttempts>3</config.hibernate.c3p0.acquireRetryAttempts>

                <!-- how long between retry attempts in milliseconds -->
                <config.hibernate.c3p0.acquireRetryDelay>1000</config.hibernate.c3p0.acquireRetryDelay>

                <!-- If connections fail what to do ?? if false than throw exceptions but remain active, if true than
                 pool is invalidated entirely. In practice false proved often better, but in depends on type of
                 application -->
                <config.hibernate.c3p0.breakAfterAcquireFailure>FALSE</config.hibernate.c3p0.breakAfterAcquireFailure>

                <!-- auto create database based on entities  -->
                <config.hibernate.hbm2ddl.auto>create</config.hibernate.hbm2ddl.auto>

                <!-- Connection string -->
                <database.ip.address>127.0.0.1</database.ip.address>
                <database.port>3306</database.port>
                <database.name>hibernate_demo</database.name>
                <database.user>root</database.user>
                <database.password>root</database.password>
                <database.driverClassName>com.mysql.jdbc.Driver</database.driverClassName>
            </properties>
        </profile>
    </profiles>
</project>